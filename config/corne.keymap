/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_da.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };
    };

    //

    macros {
        tmux_p1: tmux_p1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(DA_S) &kp DA_N1>;
            label = "TMUX_P1";
        };

        tmux_p2: tmux_p2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(DA_S) &kp DA_N2>;
            label = "TMUX_P2";
        };

        tmux_p3: tmux_p3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(DA_S) &kp DA_N3>;
            label = "TMUX_P3";
        };

        tmux_p4: tmux_p4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(DA_S) &kp DA_N4>;
            label = "TMUX_P4";
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <10 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";
            bindings = <
&none  &kp Q               &kp W              &kp E                &kp R                  &kp T        &kp Y    &kp U                   &kp I                 &kp O               &kp P                     &none
&none  &hm LEFT_META DA_A  &hm LEFT_ALT DA_S  &hm LEFT_SHIFT DA_D  &hm LEFT_CONTROL DA_F  &kp G        &kp H    &hm RIGHT_CONTROL DA_J  &hm RIGHT_SHIFT DA_K  &hm RIGHT_ALT DA_L  &hm RIGHT_META DA_A_RING  &none
&none  &kp Z               &kp X              &kp C                &kp V                  &kp B        &kp N    &kp M                   &kp DA_COMMA          &kp DA_PERIOD       &mt DA_AE DA_O_SLASH      &none
                                              &kp ESCAPE           &lt 2 TAB              &kp SPACE    &kp RET  &lt 1 BACKSPACE         &kp LA(BACKSPACE)
            >;
        };

        left {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "left";
            bindings = <
&none  &kp DA_EXCLAMATION  &kp DA_AT             &kp DA_HASH               &kp DA_DOLLAR      &kp DA_PERCENT          &kp DA_CARET      &kp DA_AMPERSAND   &kp DA_ASTERISK  &kp DA_GRAVE  &kp DA_TILDE     &none
&none  &kp DA_LESS_THAN    &kp DA_DOUBLE_QUOTES  &kp DA_LEFT_PARENTHESIS   &kp LS(LA(DA_N8))  &kp DA_LEFT_BRACKET     &kp DA_FSLH       &kp DA_MINUS       &kp DA_EQUAL     &kp DA_COLON  &kp DA_SEMI      &none
&none  &kp DA_GT           &kp DA_SINGLE_QUOTE   &kp DA_RIGHT_PARENTHESIS  &kp LS(LA(DA_N9))  &kp DA_RIGHT_BRACKET    &kp DA_BACKSLASH  &kp DA_UNDERSCORE  &kp DA_PLUS      &kp DA_PIPE   &kp DA_QUESTION  &none
                                                 &trans                    &trans             &trans                  &trans            &trans             &trans
            >;
        };

        right {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "right";
            bindings = <
&none  &kp DA_N1  &kp DA_N2  &kp DA_N3  &kp DA_N4  &kp DA_N5    &kp DA_N6  &kp DA_N7      &kp DA_N8    &kp DA_N9  &kp DA_N0     &none
&none  &none      &none      &none      &none      &none        &kp LEFT   &kp DOWN       &kp UP       &kp RIGHT  &kp LG(DA_C)  &none
&none  &none      &none      &none      &none      &none        &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp LG(DA_V)  &none
                             &none      &none      &none        &none      &none          &none
            >;
        };

        tri {
            bindings = <
&none  &kp LG(DA_N1)  &kp LG(DA_N2)  &kp LG(DA_N3)  &kp LG(DA_N4)  &kp LG(DA_N5)    &tmux_p1      &tmux_p2      &tmux_p3      &tmux_p4  &kp C_VOLUME_UP  &none
&none  &none          &none          &none          &none          &none            &none         &none         &none         &none     &kp C_VOL_DN     &none
&none  &none          &none          &none          &none          &none            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none     &kp K_MUTE       &none
                                     &trans         &trans         &trans           &trans        &trans        &trans
            >;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
